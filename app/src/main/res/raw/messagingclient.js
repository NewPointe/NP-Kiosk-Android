"use strict";(()=>{if(window.hasRockCheckinClientAPI)return;window.hasRockCheckinClientAPI=!0;class e{constructor(){this.callbacks=new Map}notify(e,n){this.internalWrite(JSON.stringify({jsonrpc:"2.0",method:e,params:n}))}write(e,n){const r=function(){const e=new Uint8Array(16);return window.crypto.getRandomValues(e),t[e[0]]+t[e[1]]+t[e[2]]+t[e[3]]+"-"+t[e[4]]+t[e[5]]+"-"+t[64|e[6]]+t[e[7]]+"-"+t[128|e[8]]+t[e[9]]+"-"+t[e[10]]+t[e[11]]+t[e[12]]+t[e[13]]+t[e[14]]+t[e[15]]}(),i=new Promise((e,n)=>this.callbacks.set(r,{resolve:e,reject:n}));return this.internalWrite(JSON.stringify({jsonrpc:"2.0",method:e,params:n,id:r})),i}messageReceived(e){var n;const t=function(e){try{return JSON.parse(e)}catch(e){return null}}(e);if(null===t)console.error("[RpcClient] Failed to parse JSON data: "+e);else if(t.id){const e=t.id.toString(),r=this.callbacks.get(e);r&&(this.callbacks.delete(e),"error"in t?r.reject(new Error(null===(n=t.error)||void 0===n?void 0:n.message)):"result"in t&&r.resolve(t.result))}}}class n extends e{constructor(e){super(),this.messagePort=e,this.rpc=new Proxy(Object.create(null),{get:(e,n,t)=>(...e)=>this.write(n.toString(),e)}),e.addEventListener("message",this.OnPortMessage.bind(this)),e.addEventListener("messageerror",this.OnPortMessageError.bind(this))}OnPortMessage(e){this.messageReceived(e.data)}OnPortMessageError(e){console.log("[RpcClient] WebMessage Error: "+e.data)}internalWrite(e){this.messagePort.postMessage(e)}}const t=Array(256).fill(0).map((e,n)=>n.toString(16).padStart(2,"0"));let r=null;window.external||(window.external={}),window.external.PrintLabels=(e=>{var n;null===(n=r)||void 0===n||n.rpc.print(JSON.parse(e))}),window.Cordova||(window.Cordova={}),window.Cordova.exec=((e,n,t,i,s)=>{var o,a,l;"ZebraPrint"===t&&"printTags"===i?null===(o=r)||void 0===o||o.rpc.print(JSON.parse(s[0])).then(e,n):"ApplicationPreferences"===t&&("getSetting"===i?null===(a=r)||void 0===a||a.rpc.getAppPreference(s[0].key).then(e,n):"setSetting"===i&&(null===(l=r)||void 0===l||l.rpc.setAppPreference(s[0].key,s[0].value).then(e,n)))}),window.ZebraPrintPlugin||(window.ZebraPrintPlugin={}),window.ZebraPrintPlugin.printTags=((e,n,t)=>{var i;null===(i=r)||void 0===i||i.rpc.print(JSON.parse(e)).then(n,t)}),console.log("[NP Check-in] Starting web messaging client"),window.addEventListener("message",e=>{"org.newpointe.kiosk.CHECKIN_API_INIT"===e.data&&1===e.ports.length&&(console.log("[NP Check-in] Got Init message"),r=new n(e.ports[0])),window.labelData&&window.onDeviceReady&&(window.onDeviceReady(),window.onDeviceReady=(()=>{}))},!1)})()